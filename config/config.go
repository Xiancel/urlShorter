package config

import (
	"bufio"
	"fmt"
	"os"
	"strings"
	"urlshort/shorter"
)

// —á–∏—Ç–∞—á—å —Å—Ç—Ä–æ–∫–∏
var reader *bufio.Reader = bufio.NewReader(os.Stdin)

// –ø—Ä–∏–π–º–∞—î —Ç–µ–∫—Å—Ç–æ–≤–µ –≤–≤–µ–¥–µ–Ω—è
func getStrInput(prompt string) string {
	fmt.Print(prompt)
	input, _ := reader.ReadString('\n')
	return strings.TrimSpace(input)
}

// —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ñ –ø—Ä–æ–≥—Ä–∞–º–º–∏
func Init() {
	fmt.Println("üîó URL Shortener")
	// –≥–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª
	for {
		// –∑–∞–ø—Ä–æ—Å—Å url —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		fmt.Println("\n–í–≤–µ–¥—ñ—Ç—å URL –¥–ª—è —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è (–∞–±–æ 'exit' –¥–ª—è –≤–∏—Ö–æ–¥—É): ")
		inputs := getStrInput("> ")

		// –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –≤–≤—ñ–¥ 'exit'
		if inputs == "exit" {
			return
		}
		fmt.Println("\nüì° –í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ TinyURL API...")

		// –ø–µ—Ä–µ–¥–∞–≤–∞–Ω–Ω—è url –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Ñ—É–Ω–∫—Ü—ñ—ó shortingurl
		res, err := shorter.ShortingUrl(inputs)
		// –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
		if err != nil {
			if strings.HasPrefix(err.Error(), "api: ") {
				fmt.Println("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥ TinyURL:", strings.TrimPrefix(err.Error(), "api: "))
			} else if strings.HasPrefix(err.Error(), "network: ") {
				fmt.Println("‚ùå –ú–µ—Ä–µ–∂–µ–≤–∞ –ø–æ–º–∏–ª–∫–∞:", strings.TrimPrefix(err.Error(), "network: "))
			} else {
				fmt.Println("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: ", err)
			}
			continue
		}
		// –≤–∏–≤—ñ–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø—Ä–æ —É—Å–ø–∏—à–Ω—É —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è
		fmt.Println("\n‚úÖ –£—Å–ø—ñ—à–Ω–æ —Å–∫–æ—Ä–æ—á–µ–Ω–æ!")
		fmt.Println("üîó –û—Ä–∏–≥—ñ–Ω–∞–ª: ", inputs)
		fmt.Println("‚≠ê –ö–æ—Ä–æ—Ç–∫–∏–π: ", res)
	}
}
